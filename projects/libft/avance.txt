


int ft_isalpha(char c); OK
int ft_isalnum(char c); OK
int ft_isdigit(char c); OK
int ft_isascii(char c); OK
int ft_isprint(char c); OK 
int ft_strlen (char *str); OK
int ft_toupper (char c); OK 
int ft_tolower (char c); OK 

strlcat:  INICIADA CON ERRORES continuar con ella

ft_bzero.c
ft_memchr.c 
ft_memcmp.c 
ft_memcpy.c 
ft_memmove.c
ft_menset.c 
unsigned int ft_strlcpy(char *dst, const char *src, unsigned int size);  OK (revisar  unsigned int o size_t)




*isalpha: Verifica si un carácter es una letra del alfabeto.
*toupper: Convierte un carácter a mayúscula.
*isdigit: Verifica si un carácter es un dígito.
*tolower: Convierte un carácter a minúscula.
*isalnum: Verifica si un carácter es una letra o un dígito.
*isascii: Verifica si un carácter pertenece al conjunto ASCII.
strchr: Busca la primera aparición de un carácter en una cadena.
*isprint: Verifica si un carácter es imprimible.
strrchr: Busca la última aparición de un carácter en una cadena.
*strlen: Calcula la longitud de una cadena.
strncmp: Compara las primeras 'n' posiciones de dos cadenas.
memset: Rellena una región de memoria con un valor dado.
bzero: Establece en cero una región de memoria.
memchr: Busca un valor en una región de memoria.
memcpy: Copia un bloque de memoria a otro.
memcmp: Compara dos bloques de memoria.
memmove: Copia un bloque de memoria, manejando superposición de áreas.
strnstr: Busca una subcadena dentro de otra, hasta un número limitado de caracteres.
*strlcpy: Copia una cadena a un destino, garantizando la terminación nula.
strlcat: Concatena dos cadenas, garantizando la terminación nula.   
atoi: Convierte una cadena en un entero.

